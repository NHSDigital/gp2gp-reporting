#!/bin/bash

set -Eeo pipefail

task="$1"
deployment_env="$2"

function check_env {
    if [ "$1" != "dev" ] && [ "$1" != "prod" ]; then
        echo "Usage: $0 TASK DEPLOYMENT-ENVIRONMENT"
        echo "DEPLOYMENT-ENVIRONMENT must be dev or prod"
        exit 1
    fi
}

case "${task}" in
  test)
      npm install
      npm run test
      ;;
  dojo-test)
      dojo "./tasks test"
      ;;
  build)
      check_env ${deployment_env}
      export ENVIRONMENT=${deployment_env}
      npm install
      npm run build
      ;;
  dojo-build)
      dojo "./tasks build ${deployment_env}"
      ;;
  get-metrics)
      check_env ${deployment_env}
      export ENVIRONMENT=${deployment_env}
      npm install
      npm run getMetrics
      ;;
  dojo-get-metrics)
      dojo "./tasks get-metrics ${deployment_env}"
      ;;
  get-metadata)
      check_env ${deployment_env}
      export ENVIRONMENT=${deployment_env}
      npm install
      npm run getMetadata
      ;;
  dojo-get-metadata)
      dojo "./tasks get-metadata ${deployment_env}"
      ;;
  deploy)
      npm install
      npm run deploy
      ;;
  dojo-deploy)
      dojo "./tasks deploy"
      ;;
  *)
      echo "Invalid command: '${task}'"
      exit 1
      ;;
esac

set +e
