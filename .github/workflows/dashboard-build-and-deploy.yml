name: Dashboard Build and Deploy to Dev

on:
  workflow_dispatch:
    inputs:
      environment:
        default: "dev"
        description: "Which environment should this run against"
        required: true
        type: choice
        options:
          - dev
          
  workflow_call:
    inputs:
      environment:
        description: "Which Environment settings to use."
        required: true
        type: string
        default: "dev"

permissions:
  pull-requests: write
  id-token: write
  contents: read

jobs:
  build-and-publish-ui:
    if: inputs.environment == 'dev'
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./dashboard
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          mask-aws-account-id: true
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}
 
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get ECR repository URI from SSM
        id: ecr-repo
        run: |
          uri=$(aws ssm get-parameter \
          --name "/registrations/${{ vars.AWS_ENVIRONMENT }}/data-pipeline/ecr/url/gp2gp-dashboard" \
          --query "Parameter.Value" --output text)
          echo "::add-mask::$uri"
          echo "uri=$uri" >> $GITHUB_OUTPUT

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: dashboard/.nvmrc
          cache: 'npm'
          cache-dependency-path: dashboard/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build and Push Docker Image
        env:
          REF_NAME: ${{ github.ref_name }}
          ECR_URI: ${{ steps.ecr-repo.outputs.uri }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          TAG_ARGS=(-t "$ECR_URI:$IMAGE_TAG" -t "$ECR_URI:latest")
          if [ -n "${REF_NAME:-}" ]; then
            REF_TAG="${REF_NAME//\//-}"
            TAG_ARGS+=(-t "$ECR_URI:$REF_TAG")
          fi
          docker build "${TAG_ARGS[@]}" --build-arg BUILD_TAG="$IMAGE_TAG" .
          docker push "$ECR_URI:$IMAGE_TAG"
          docker push "$ECR_URI:latest"
          if [ -n "${GITHUB_REF_NAME:-}" ]; then
            REF_TAG="${GITHUB_REF_NAME//\//-}"
            docker push "$ECR_URI:$REF_TAG"
          fi
          
  redeploy_gp2gp_infrastructure_dashboard:
    name: Redeploy gp2gp infrastructure dashboard
    needs: [build-and-publish-ui]
    uses: nhsconnect/gp2gp-reporting-infrastructure/.github/workflows/deploy-stack.yml@v2
    with:
      environment: ${{ inputs.environment }}
      is_deployment: ${{ github.ref == 'refs/heads/main' }}
      terraform_stack: gp2gp-dashboard
      image_tag: gp2gp_dashboard
      build_lambda: true
      git_ref: ${{ github.ref }}
    secrets: inherit

  redeploy_gp2gp_infrastructure_step_functions:
    name: Redeploy gp2gp infrastructure step functions
    needs: [redeploy_gp2gp_infrastructure_dashboard]
    uses: nhsconnect/gp2gp-reporting-infrastructure/.github/workflows/deploy-stack.yml@v2
    with:
      environment: ${{ inputs.environment }}
      is_deployment: ${{ github.ref == 'refs/heads/main' }}
      terraform_stack: step-function
      git_ref: ${{ github.ref }}
    secrets: inherit